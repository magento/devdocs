---
title: Catalog
release: 2.4.3
content: |-
  Magento_Catalog module functionality is represented by the following sub-systems:
   - Products Management. It includes CRUD operation of product, product media, 
   product attributes, etc...
   - Category Management. It includes CRUD operation of category, category attributes

  Catalog module provides mechanism for creating new product type in the system.
  Catalog module provides API filtering that allows to limit product selection with 
  advanced filters.

#### Observer
  This module observes the following events
   `etc/events.xml`
     - `magento_catalog_api_data_productinterface_save_before`  event in 
     `Magento\Framework\EntityManager\Observer\BeforeEntitySave` file.
     - `magento_catalog_api_data_productinterface_save_after`  event in 
     `Magento\Framework\EntityManager\Observer\AfterEntitySave` file.
     - `magento_catalog_api_data_productinterface_delete_before`  event in 
     `Magento\Framework\EntityManager\Observer\BeforeEntityDelete` file.
     - `magento_catalog_api_data_productinterface_delete_after`  event in 
     `Magento\Framework\EntityManager\Observer\AfterEntityDelete` file.
     - `magento_catalog_api_data_productinterface_load_after`  event in 
     `Magento\Framework\EntityManager\Observer\AfterEntityLoad` file.
     - `magento_catalog_api_data_categoryinterface_save_before`  event in 
     `Magento\Framework\EntityManager\Observer\BeforeEntitySave` file.
     - `magento_catalog_api_data_categoryinterface_save_after`  event in 
     `Magento\Framework\EntityManager\Observer\AfterEntitySave` file.
     - `magento_catalog_api_data_categoryinterface_save_after`  event in 
     `Magento\Catalog\Observer\InvalidateCacheOnCategoryDesignChange` file.
     - `magento_catalog_api_data_categoryinterface_delete_before`  event in 
     `Magento\Framework\EntityManager\Observer\BeforeEntityDelete` file.
     - `magento_catalog_api_data_categoryinterface_delete_after`  event in 
     `Magento\Framework\EntityManager\Observer\AfterEntityDelete` file.
     - `magento_catalog_api_data_categoryinterface_load_after`  event in 
     `Magento\Framework\EntityManager\Observer\AfterEntityLoad` file.
     - `magento_catalog_api_data_categorytreeinterface_save_before`  event in 
     `Magento\Framework\EntityManager\Observer\BeforeEntitySave` file.
     - `magento_catalog_api_data_categorytreeinterface_save_after`  event in 
     `Magento\Framework\EntityManager\Observer\AfterEntitySave` file.
     - `magento_catalog_api_data_categorytreeinterface_delete_before`  event in 
     `Magento\Framework\EntityManager\Observer\BeforeEntityDelete` file.
     - `magento_catalog_api_data_categorytreeinterface_delete_after`  event in 
     `Magento\Framework\EntityManager\Observer\AfterEntityDelete` file.
     - `magento_catalog_api_data_categorytreeinterface_load_after`  event in 
     `Magento\Framework\EntityManager\Observer\AfterEntityLoad` file.
     - `admin_system_config_changed_section_catalog`  event in 
     `Magento\Catalog\Observer\SwitchPriceAttributeScopeOnConfigChange` file.
     - `catalog_product_save_before`  event in 
     `Magento\Catalog\Observer\SetSpecialPriceStartDate` file.
     - `store_save_after`  event in 
     `Magento\Catalog\Observer\SynchronizeWebsiteAttributesOnStoreChange` file.
     - `catalog_product_save_commit_after`  event in 
     `Magento\Catalog\Observer\ImageResizeAfterProductSave` file.
     - `catalog_category_prepare_save`  event in 
     `Magento\Catalog\Observer\CategoryDesignAuthorization` file.

   `/etc/frontend/events.xml`
     - `customer_login`  event in 
     `Magento\Catalog\Observer\Compare\BindCustomerLoginObserver` file.
     - `customer_logout`  event in 
     `Magento\Catalog\Observer\Compare\BindCustomerLogoutObserver` file.

   `/etc/adminhtml/events.xml`
     - `cms_wysiwyg_images_static_urls_allowed`  event in 
     `Magento\Catalog\Observer\CatalogCheckIsUsingStaticUrlsAllowedObserver` file.
     - `catalog_category_change_products`  event in 
     `Magento\Catalog\Observer\CategoryProductIndexer` file.
     - `category_move`  event in `Magento\Catalog\Observer\FlushCategoryPagesCache` file.
  
  ### Layouts
    The module interacts with the following layout handles

    `view/base/layout`
     `catalog_product_prices`

    `view/adminhtml/layout`
       `catalog_product_grouped`
       `catalog_product_new`
       `catalog_product_view_type_grouped`
       `groupedproduct_edit_popup`
       `groupedproduct_popup_grid`
       `sales_order_creditmemo_new`
       `sales_order_creditmemo_updateqty`
       `sales_order_creditmemo_view`
       `sales_order_invoice_new`
       `sales_order_invoice_updateqty`
       `sales_order_invoice_view`
       `sales_order_view`
       
    `view/frontend/layout`
       `catalog_product_rss_feed_renderer_list`
       `catalog_product_view_type_grouped`
       `checkout_cart_item_renderers`
       `checkout_onepage_review_item_renderers`
       `sales_email_order_creditmemo_renderers`
       `sales_email_order_invoice_renderers`
       `sales_email_order_renderers`
       `sales_guest_invoice`
       `sales_order_creditmemo_renderers`
       `sales_order_invoice_renderers`
       `sales_order_item_renderers`
       `sales_order_print_creditmemo_renderers`
       `sales_order_print_invoice_renderers`
       `sales_order_print_renderers`
