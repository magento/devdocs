---
title: Wishlist
content: "The Magento_Wishlist module implements the Wishlist functionality.\n\nThis
  module allows customers to create a list of products that they can add to their
  shopping cart to be purchased at a later date, or share with friends.\n\n## Installation
  details\n\nBefore installing this module, note that the Magento_Wishlist is dependent
  on the following modules:\n\n- Magento_Captcha\n- Magento_Catalog\n- Magento_Customer\n\nBefore
  disabling or uninstalling this module, note the following dependencies:\n\n- Magento_WishlistAnalytics\n\nRefer
  to [how to enable or disable modules in Magento 2](https://devdocs.magento.com/guides/v2.4/install-gde/install/cli/install-cli-subcommands-enable.html).\n\n##
  Structure\n\n`Pricing/` - the directory that contain solutions for configurable
  and downloadable product price.\n\nFor information about a typical file structure
  of a module, see [Module file structure](https://devdocs.magento.com/guides/v2.4/extension-dev-guide/build/module-file-structure.html#module-file-structure).\n\n##
  Extensibility\n\nExtension developers can interact with the Magento_Wishlist module.
  For more information about the Magento extension mechanism, see [Magento plug-ins](https://devdocs.magento.com/guides/v2.4/extension-dev-guide/plugins.html).\n\n[The
  Magento dependency injection mechanism](https://devdocs.magento.com/guides/v2.4/extension-dev-guide/depend-inj.html)
  enables you to override the functionality of the Magento_Wishlist module.\n\n###
  Events\n\nThe module dispatches the following events:\n\n- `product_option_renderer_init`
  event in the `\\Magento\\Wishlist\\Block\\Customer\\Wishlist\\Item\\Options::_construct()`
  method. Parameters:\n    - `block` is a Wishlist block customer items (`\\Magento\\Wishlist\\Block\\Customer\\Wishlist\\Item\\Options`
  class).\n- `rss_wishlist_xml_callback` event in the `\\Magento\\Wishlist\\Model\\Rss\\Wishlist::getRssData()`
  method. Parameters:\n    - `$args` is a array of product object (`\\Magento\\Catalog\\Model\\Product`
  class).\n- `wishlist_add_item` event in the `\\Magento\\Wishlist\\Model\\Wishlist::addItem()`
  method. Parameters:\n    - `item` is an item object (`\\Magento\\Wishlist\\Model\\Item`
  class).\n- `wishlist_add_product` event in the `\\Magento\\Wishlist\\Controller\\Index\\Add::execute()`
  method. Parameters:\n    - `wishlist` is a Wishlist object (`\\Magento\\Wishlist\\Model\\Wishlist`
  class).\n    - `product` is a product object (`\\Magento\\Catalog\\Api\\Data\\ProductInterface`
  class).\n    - `item` is an item object (`\\Magento\\Wishlist\\Model\\Item` class).\n-
  `wishlist_item_collection_products_after_load` event in the `\\Magento\\Wishlist\\Model\\ResourceModel\\Item\\Collection::_assignProducts()`
  method. Parameters:\n    - `product_collection` is a product collection object (`\\Magento\\Catalog\\Model\\ResourceModel\\Product\\Collection`
  class).\n- `wishlist_items_renewed` event in the `\\Magento\\Wishlist\\Helper\\Data::calculate()`
  method.\n- `wishlist_product_add_after` event in the `\\Magento\\Wishlist\\Model\\Wishlist::addNewItem()`
  method. Parameters:\n    - `items` is an array of item object (`\\Magento\\Wishlist\\Model\\Item`
  class).\n- `wishlist_share` event in the `\\Magento\\Wishlist\\Controller\\Index\\Send::execute()`
  method. Parameters:\n    - `wishlist` is a Wishlist object (`\\Magento\\Wishlist\\Model\\Wishlist`
  class).\n- `wishlist_update_item` event in the `\\Magento\\Wishlist\\Controller\\Index\\UpdateItemOptions::execute()`
  method. Parameters:\n    - `wishlist` is a Wishlist object (`\\Magento\\Wishlist\\Model\\Wishlist`
  class).\n    - `product` is a product object (`\\Magento\\Catalog\\Api\\Data\\ProductInterface`
  class).\n    - `item` is an item object (`\\Magento\\Wishlist\\Model\\Item` class).\n\nFor
  information about the event, see [Events and observers](https://devdocs.magento.com/guides/v2.4/extension-dev-guide/events-and-observers.html#events).\n\n###
  Layouts\n\nThis module introduces the following layouts and layout handles in the
  directories:\n\n- `view/adminhtml/layout`:\n    - `customer_index_wishlist`\n- `view/base/layout`:\n
  \   - `catalog_product_prices`\n- `view/frantend/layout`:\n    - `catalog_category_view`\n
  \   - `catalog_product_view`\n    - `catalogsearch_advanced_result`\n    - `checkout_cart_index`\n
  \   - `checkout_cart_item_renderers`\n    - `customer_account`\n    - `default`\n
  \   - `wishlist_email_items`\n    - `wishlist_email_rss`\n    - `wishlist_index_configure`\n
  \   - `wishlist_index_configure_type_bundle`\n    - `wishlist_index_configure_type_configurable`\n
  \   - `wishlist_index_configure_type_downloadable`\n    - `wishlist_index_configure_type_grouped`\n
  \   - `wishlist_index_configure_type_simple`\n    - `wishlist_index_index`\n    -
  `wishlist_index_share`\n    - `wishlist_shared_index.xml`\n    \nFor more information
  about a layout, see the [Layout documentation](https://devdocs.magento.com/guides/v2.4/frontend-dev-guide/layouts/layout-overview.html).\n\n###
  UI components\n\nYou can extend a customer form and widgets using the configuration
  files located in the directories \n- `view/base/ui_component`:\n    - `customer_form`\n-
  `view/frontend/ui_component`:\n    - `widget_recently_compared`\n    - `widget_recently_viewed`\n\nFor
  information about a UI component, see [Overview of UI components](https://devdocs.magento.com/guides/v2.4/ui_comp_guide/bk-ui_comps.html)."
